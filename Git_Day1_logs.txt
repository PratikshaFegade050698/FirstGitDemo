
hp@DESKTOP-ABEQO77 MINGW64 ~/Desktop/Training/Git/FirstGitDemo
$ git config --global user.name "Pratiksha"

hp@DESKTOP-ABEQO77 MINGW64 ~/Desktop/Training/Git/FirstGitDemo
$ git config --global user.email "pratikshafegade@gmail.com"

hp@DESKTOP-ABEQO77 MINGW64 ~/Desktop/Training/Git/FirstGitDemo
$ git config --list
diff.astextplain.textconv=astextplain
filter.lfs.clean=git-lfs clean -- %f
filter.lfs.smudge=git-lfs smudge -- %f
filter.lfs.process=git-lfs filter-process
filter.lfs.required=true
http.sslbackend=openssl
http.sslcainfo=C:/Program Files/Git/mingw64/ssl/certs/ca-bundle.crt
core.autocrlf=true
core.fscache=true
core.symlinks=true
pull.rebase=false
credential.helper=manager-core
credential.https://dev.azure.com.usehttppath=true
user.name=Pratiksha
user.email=pratikshafegade@gmail.com

hp@DESKTOP-ABEQO77 MINGW64 ~/Desktop/Training/Git/FirstGitDemo
$ git config --global core.editor notepad

hp@DESKTOP-ABEQO77 MINGW64 ~/Desktop/Training/Git/FirstGitDemo
$ git config --list
diff.astextplain.textconv=astextplain
filter.lfs.clean=git-lfs clean -- %f
filter.lfs.smudge=git-lfs smudge -- %f
filter.lfs.process=git-lfs filter-process
filter.lfs.required=true
http.sslbackend=openssl
http.sslcainfo=C:/Program Files/Git/mingw64/ssl/certs/ca-bundle.crt
core.autocrlf=true
core.fscache=true
core.symlinks=true
pull.rebase=false
credential.helper=manager-core
credential.https://dev.azure.com.usehttppath=true
user.name=Pratiksha
user.email=pratikshafegade@gmail.com
core.editor=notepad

hp@DESKTOP-ABEQO77 MINGW64 ~/Desktop/Training/Git/FirstGitDemo
$ git init
Initialized empty Git repository in C:/Users/hp/Desktop/Training/Git/FirstGitDemo/.git/

hp@DESKTOP-ABEQO77 MINGW64 ~/Desktop/Training/Git/FirstGitDemo (master)
$ git status
On branch master

No commits yet

Untracked files:
  (use "git add <file>..." to include in what will be committed)
        file1.txt

nothing added to commit but untracked files present (use "git add" to track)

hp@DESKTOP-ABEQO77 MINGW64 ~/Desktop/Training/Git/FirstGitDemo (master)
$ git add file1.txt

hp@DESKTOP-ABEQO77 MINGW64 ~/Desktop/Training/Git/FirstGitDemo (master)
$ git status
On branch master

No commits yet

Changes to be committed:
  (use "git rm --cached <file>..." to unstage)
        new file:   file1.txt


hp@DESKTOP-ABEQO77 MINGW64 ~/Desktop/Training/Git/FirstGitDemo (master)
$ git commit -m "WI1:file1 created,hello world"
[master (root-commit) 464a541] WI1:file1 created,hello world
 1 file changed, 1 insertion(+)
 create mode 100644 file1.txt

hp@DESKTOP-ABEQO77 MINGW64 ~/Desktop/Training/Git/FirstGitDemo (master)
$ git status
On branch master
nothing to commit, working tree clean

hp@DESKTOP-ABEQO77 MINGW64 ~/Desktop/Training/Git/FirstGitDemo (master)
$ git status
On branch master
Changes not staged for commit:
  (use "git add <file>..." to update what will be committed)
  (use "git restore <file>..." to discard changes in working directory)
        modified:   file1.txt

no changes added to commit (use "git add" and/or "git commit -a")

hp@DESKTOP-ABEQO77 MINGW64 ~/Desktop/Training/Git/FirstGitDemo (master)
$ git commit -am "W1:file1 updatded for changes to login"
[master 24d632a] W1:file1 updatded for changes to login
 1 file changed, 3 insertions(+), 1 deletion(-)

hp@DESKTOP-ABEQO77 MINGW64 ~/Desktop/Training/Git/FirstGitDemo (master)
$ git status
On branch master
Untracked files:
  (use "git add <file>..." to include in what will be committed)
        file2.txt

nothing added to commit but untracked files present (use "git add" to track)

hp@DESKTOP-ABEQO77 MINGW64 ~/Desktop/Training/Git/FirstGitDemo (master)
$ git commit -m "WI1:file2 created,Welcome Git Demo"
On branch master
Untracked files:
  (use "git add <file>..." to include in what will be committed)
        file2.txt

nothing added to commit but untracked files present (use "git add" to track)

hp@DESKTOP-ABEQO77 MINGW64 ~/Desktop/Training/Git/FirstGitDemo (master)
$ git add file2.txt

hp@DESKTOP-ABEQO77 MINGW64 ~/Desktop/Training/Git/FirstGitDemo (master)
$ git commit -m "WI1:file2 created,Welcome Git Demo"
[master 1346b49] WI1:file2 created,Welcome Git Demo
 1 file changed, 1 insertion(+)
 create mode 100644 file2.txt

hp@DESKTOP-ABEQO77 MINGW64 ~/Desktop/Training/Git/FirstGitDemo (master)
$ git status
On branch master
nothing to commit, working tree clean

hp@DESKTOP-ABEQO77 MINGW64 ~/Desktop/Training/Git/FirstGitDemo (master)
$ git log
commit 1346b491f1a45311097d4bccd411a362a65ab3c3 (HEAD -> master)
Author: Pratiksha <pratikshafegade@gmail.com>
Date:   Thu Nov 5 16:18:03 2020 +0530

    WI1:file2 created,Welcome Git Demo

commit 24d632a87339ba1f564f5313a7899b48a73f09c6
Author: Pratiksha <pratikshafegade@gmail.com>
Date:   Thu Nov 5 16:15:51 2020 +0530

    W1:file1 updatded for changes to login

commit 464a541bffb72952df2f57169ef76127bfcb489b
Author: Pratiksha <pratikshafegade@gmail.com>
Date:   Thu Nov 5 16:11:06 2020 +0530

    WI1:file1 created,hello world

hp@DESKTOP-ABEQO77 MINGW64 ~/Desktop/Training/Git/FirstGitDemo (master)
$ git log --oneline
1346b49 (HEAD -> master) WI1:file2 created,Welcome Git Demo
24d632a W1:file1 updatded for changes to login
464a541 WI1:file1 created,hello world

hp@DESKTOP-ABEQO77 MINGW64 ~/Desktop/Training/Git/FirstGitDemo (master)
$ git log -2
commit 1346b491f1a45311097d4bccd411a362a65ab3c3 (HEAD -> master)
Author: Pratiksha <pratikshafegade@gmail.com>
Date:   Thu Nov 5 16:18:03 2020 +0530

    WI1:file2 created,Welcome Git Demo

commit 24d632a87339ba1f564f5313a7899b48a73f09c6
Author: Pratiksha <pratikshafegade@gmail.com>
Date:   Thu Nov 5 16:15:51 2020 +0530

    W1:file1 updatded for changes to login

hp@DESKTOP-ABEQO77 MINGW64 ~/Desktop/Training/Git/FirstGitDemo (master)
$ git log --oneline -2
1346b49 (HEAD -> master) WI1:file2 created,Welcome Git Demo
24d632a W1:file1 updatded for changes to login

hp@DESKTOP-ABEQO77 MINGW64 ~/Desktop/Training/Git/FirstGitDemo (master)
$ git log --author="Pratiksha"
commit 1346b491f1a45311097d4bccd411a362a65ab3c3 (HEAD -> master)
Author: Pratiksha <pratikshafegade@gmail.com>
Date:   Thu Nov 5 16:18:03 2020 +0530

    WI1:file2 created,Welcome Git Demo

commit 24d632a87339ba1f564f5313a7899b48a73f09c6
Author: Pratiksha <pratikshafegade@gmail.com>
Date:   Thu Nov 5 16:15:51 2020 +0530

    W1:file1 updatded for changes to login

commit 464a541bffb72952df2f57169ef76127bfcb489b
Author: Pratiksha <pratikshafegade@gmail.com>
Date:   Thu Nov 5 16:11:06 2020 +0530

    WI1:file1 created,hello world

hp@DESKTOP-ABEQO77 MINGW64 ~/Desktop/Training/Git/FirstGitDemo (master)
$ git log --since="10/04/2020"
commit 1346b491f1a45311097d4bccd411a362a65ab3c3 (HEAD -> master)
Author: Pratiksha <pratikshafegade@gmail.com>
Date:   Thu Nov 5 16:18:03 2020 +0530

    WI1:file2 created,Welcome Git Demo

commit 24d632a87339ba1f564f5313a7899b48a73f09c6
Author: Pratiksha <pratikshafegade@gmail.com>
Date:   Thu Nov 5 16:15:51 2020 +0530

    W1:file1 updatded for changes to login

commit 464a541bffb72952df2f57169ef76127bfcb489b
Author: Pratiksha <pratikshafegade@gmail.com>
Date:   Thu Nov 5 16:11:06 2020 +0530

    WI1:file1 created,hello world

hp@DESKTOP-ABEQO77 MINGW64 ~/Desktop/Training/Git/FirstGitDemo (master)
$ git log --since="11/04/2020"
commit 1346b491f1a45311097d4bccd411a362a65ab3c3 (HEAD -> master)
Author: Pratiksha <pratikshafegade@gmail.com>
Date:   Thu Nov 5 16:18:03 2020 +0530

    WI1:file2 created,Welcome Git Demo

commit 24d632a87339ba1f564f5313a7899b48a73f09c6
Author: Pratiksha <pratikshafegade@gmail.com>
Date:   Thu Nov 5 16:15:51 2020 +0530

    W1:file1 updatded for changes to login

commit 464a541bffb72952df2f57169ef76127bfcb489b
Author: Pratiksha <pratikshafegade@gmail.com>
Date:   Thu Nov 5 16:11:06 2020 +0530

    WI1:file1 created,hello world

hp@DESKTOP-ABEQO77 MINGW64 ~/Desktop/Training/Git/FirstGitDemo (master)
$ git log --until="11/05/2020"
commit 1346b491f1a45311097d4bccd411a362a65ab3c3 (HEAD -> master)
Author: Pratiksha <pratikshafegade@gmail.com>
Date:   Thu Nov 5 16:18:03 2020 +0530

    WI1:file2 created,Welcome Git Demo

commit 24d632a87339ba1f564f5313a7899b48a73f09c6
Author: Pratiksha <pratikshafegade@gmail.com>
Date:   Thu Nov 5 16:15:51 2020 +0530

    W1:file1 updatded for changes to login

commit 464a541bffb72952df2f57169ef76127bfcb489b
Author: Pratiksha <pratikshafegade@gmail.com>
Date:   Thu Nov 5 16:11:06 2020 +0530

    WI1:file1 created,hello world

hp@DESKTOP-ABEQO77 MINGW64 ~/Desktop/Training/Git/FirstGitDemo (master)
$ git log --grep "file2"
commit 1346b491f1a45311097d4bccd411a362a65ab3c3 (HEAD -> master)
Author: Pratiksha <pratikshafegade@gmail.com>
Date:   Thu Nov 5 16:18:03 2020 +0530

    WI1:file2 created,Welcome Git Demo

hp@DESKTOP-ABEQO77 MINGW64 ~/Desktop/Training/Git/FirstGitDemo (master)
$ git log --help

hp@DESKTOP-ABEQO77 MINGW64 ~/Desktop/Training/Git/FirstGitDemo (master)
$ git diff
diff --git a/file1.txt b/file1.txt
index a231251..766f579 100644
--- a/file1.txt
+++ b/file1.txt
@@ -1,3 +1,3 @@
-Hello World!!
+Hello World!!abdbnd

 Change for login Feature
\ No newline at end of file

hp@DESKTOP-ABEQO77 MINGW64 ~/Desktop/Training/Git/FirstGitDemo (master)
$ git log --oneline
1346b49 (HEAD -> master) WI1:file2 created,Welcome Git Demo
24d632a W1:file1 updatded for changes to login
464a541 WI1:file1 created,hello world

hp@DESKTOP-ABEQO77 MINGW64 ~/Desktop/Training/Git/FirstGitDemo (master)
$ git status
On branch master
Changes not staged for commit:
  (use "git add <file>..." to update what will be committed)
  (use "git restore <file>..." to discard changes in working directory)
        modified:   file1.txt

no changes added to commit (use "git add" and/or "git commit -a")

hp@DESKTOP-ABEQO77 MINGW64 ~/Desktop/Training/Git/FirstGitDemo (master)
$ ^C

hp@DESKTOP-ABEQO77 MINGW64 ~/Desktop/Training/Git/FirstGitDemo (master)
$ git restore --file1.txt
error: unknown option `file1.txt'
usage: git restore [<options>] [--source=<branch>] <file>...

    -s, --source <tree-ish>
                          which tree-ish to checkout from
    -S, --staged          restore the index
    -W, --worktree        restore the working tree (default)
    --ignore-unmerged     ignore unmerged entries
    --overlay             use overlay mode
    -q, --quiet           suppress progress reporting
    --recurse-submodules[=<checkout>]
                          control recursive updating of submodules
    --progress            force progress reporting
    -m, --merge           perform a 3-way merge with the new branch
    --conflict <style>    conflict style (merge or diff3)
    -2, --ours            checkout our version for unmerged files
    -3, --theirs          checkout their version for unmerged files
    -p, --patch           select hunks interactively
    --ignore-skip-worktree-bits
                          do not limit pathspecs to sparse entries only
    --pathspec-from-file <file>
                          read pathspec from file
    --pathspec-file-nul   with --pathspec-from-file, pathspec elements are separated with NUL character


hp@DESKTOP-ABEQO77 MINGW64 ~/Desktop/Training/Git/FirstGitDemo (master)
$ git checkout --file1.txt
error: unknown option `file1.txt'
usage: git checkout [<options>] <branch>
   or: git checkout [<options>] [<branch>] -- <file>...

    -b <branch>           create and checkout a new branch
    -B <branch>           create/reset and checkout a branch
    -l                    create reflog for new branch
    --guess               second guess 'git checkout <no-such-branch>' (default)
    --overlay             use overlay mode (default)
    -q, --quiet           suppress progress reporting
    --recurse-submodules[=<checkout>]
                          control recursive updating of submodules
    --progress            force progress reporting
    -m, --merge           perform a 3-way merge with the new branch
    --conflict <style>    conflict style (merge or diff3)
    -d, --detach          detach HEAD at named commit
    -t, --track           set upstream info for new branch
    -f, --force           force checkout (throw away local modifications)
    --orphan <new-branch>
                          new unparented branch
    --overwrite-ignore    update ignored files (default)
    --ignore-other-worktrees
                          do not check if another worktree is holding the given ref
    -2, --ours            checkout our version for unmerged files
    -3, --theirs          checkout their version for unmerged files
    -p, --patch           select hunks interactively
    --ignore-skip-worktree-bits
                          do not limit pathspecs to sparse entries only
    --pathspec-from-file <file>
                          read pathspec from file
    --pathspec-file-nul   with --pathspec-from-file, pathspec elements are separated with NUL character


hp@DESKTOP-ABEQO77 MINGW64 ~/Desktop/Training/Git/FirstGitDemo (master)
$ git status
On branch master
Changes not staged for commit:
  (use "git add <file>..." to update what will be committed)
  (use "git restore <file>..." to discard changes in working directory)
        modified:   file1.txt

no changes added to commit (use "git add" and/or "git commit -a")

hp@DESKTOP-ABEQO77 MINGW64 ~/Desktop/Training/Git/FirstGitDemo (master)
$ git restore file1.txt

hp@DESKTOP-ABEQO77 MINGW64 ~/Desktop/Training/Git/FirstGitDemo (master)
$ git status
On branch master
nothing to commit, working tree clean

hp@DESKTOP-ABEQO77 MINGW64 ~/Desktop/Training/Git/FirstGitDemo (master)
$ git diff

hp@DESKTOP-ABEQO77 MINGW64 ~/Desktop/Training/Git/FirstGitDemo (master)
$ git log --oneline
1346b49 (HEAD -> master) WI1:file2 created,Welcome Git Demo
24d632a W1:file1 updatded for changes to login
464a541 WI1:file1 created,hello world

hp@DESKTOP-ABEQO77 MINGW64 ~/Desktop/Training/Git/FirstGitDemo (master)
$ git checkout 464a541
Note: switching to '464a541'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by switching back to a branch.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -c with the switch command. Example:

  git switch -c <new-branch-name>

Or undo this operation with:

  git switch -

Turn off this advice by setting config variable advice.detachedHead to false

HEAD is now at 464a541 WI1:file1 created,hello world

hp@DESKTOP-ABEQO77 MINGW64 ~/Desktop/Training/Git/FirstGitDemo ((464a541...))
$ git log --oneline
464a541 (HEAD) WI1:file1 created,hello world

hp@DESKTOP-ABEQO77 MINGW64 ~/Desktop/Training/Git/FirstGitDemo ((464a541...))
$ git log --oneline
464a541 (HEAD) WI1:file1 created,hello world

hp@DESKTOP-ABEQO77 MINGW64 ~/Desktop/Training/Git/FirstGitDemo ((464a541...))
$ git checkout master
Previous HEAD position was 464a541 WI1:file1 created,hello world
Switched to branch 'master'

hp@DESKTOP-ABEQO77 MINGW64 ~/Desktop/Training/Git/FirstGitDemo (master)
$ git log --oneline
1346b49 (HEAD -> master) WI1:file2 created,Welcome Git Demo
24d632a W1:file1 updatded for changes to login
464a541 WI1:file1 created,hello world

hp@DESKTOP-ABEQO77 MINGW64 ~/Desktop/Training/Git/FirstGitDemo (master)
$ git status
On branch master
Untracked files:
  (use "git add <file>..." to include in what will be committed)
        .gitignore
        New Text Document.txt

nothing added to commit but untracked files present (use "git add" to track)

hp@DESKTOP-ABEQO77 MINGW64 ~/Desktop/Training/Git/FirstGitDemo (master)
$ git status
On branch master
Untracked files:
  (use "git add <file>..." to include in what will be committed)
        .gitignore

nothing added to commit but untracked files present (use "git add" to track)

hp@DESKTOP-ABEQO77 MINGW64 ~/Desktop/Training/Git/FirstGitDemo (master)
$ git add .gitignore

hp@DESKTOP-ABEQO77 MINGW64 ~/Desktop/Training/Git/FirstGitDemo (master)
$ git commit -m "config:gitignore to skip .class"
[master 0e8def5] config:gitignore to skip .class
 1 file changed, 1 insertion(+)
 create mode 100644 .gitignore

hp@DESKTOP-ABEQO77 MINGW64 ~/Desktop/Training/Git/FirstGitDemo (master)
$ git status
On branch master
nothing to commit, working tree clean

hp@DESKTOP-ABEQO77 MINGW64 ~/Desktop/Training/Git/FirstGitDemo (master)
$ git log --oneline
0e8def5 (HEAD -> master) config:gitignore to skip .class
1346b49 WI1:file2 created,Welcome Git Demo
24d632a W1:file1 updatded for changes to login
464a541 WI1:file1 created,hello world

hp@DESKTOP-ABEQO77 MINGW64 ~/Desktop/Training/Git/FirstGitDemo (master)
$ git tag

hp@DESKTOP-ABEQO77 MINGW64 ~/Desktop/Training/Git/FirstGitDemo (master)
$ ^C

hp@DESKTOP-ABEQO77 MINGW64 ~/Desktop/Training/Git/FirstGitDemo (master)
$ git tag v1.1

hp@DESKTOP-ABEQO77 MINGW64 ~/Desktop/Training/Git/FirstGitDemo (master)
$ git log --oneline
0e8def5 (HEAD -> master, tag: v1.1) config:gitignore to skip .class
1346b49 WI1:file2 created,Welcome Git Demo
24d632a W1:file1 updatded for changes to login
464a541 WI1:file1 created,hello world

hp@DESKTOP-ABEQO77 MINGW64 ~/Desktop/Training/Git/FirstGitDemo (master)
$ git tag v1.0 0e8def5

hp@DESKTOP-ABEQO77 MINGW64 ~/Desktop/Training/Git/FirstGitDemo (master)
$ git tag
v1.0
v1.1

hp@DESKTOP-ABEQO77 MINGW64 ~/Desktop/Training/Git/FirstGitDemo (master)
$ git log --oneline
0e8def5 (HEAD -> master, tag: v1.1, tag: v1.0) config:gitignore to skip .class
1346b49 WI1:file2 created,Welcome Git Demo
24d632a W1:file1 updatded for changes to login
464a541 WI1:file1 created,hello world

hp@DESKTOP-ABEQO77 MINGW64 ~/Desktop/Training/Git/FirstGitDemo (master)
$ git -rn tag
unknown option: -rn
usage: git [--version] [--help] [-C <path>] [-c <name>=<value>]
           [--exec-path[=<path>]] [--html-path] [--man-path] [--info-path]
           [-p | --paginate | -P | --no-pager] [--no-replace-objects] [--bare]
           [--git-dir=<path>] [--work-tree=<path>] [--namespace=<name>]
           <command> [<args>]

hp@DESKTOP-ABEQO77 MINGW64 ~/Desktop/Training/Git/FirstGitDemo (master)
$ git -rm tag
unknown option: -rm
usage: git [--version] [--help] [-C <path>] [-c <name>=<value>]
           [--exec-path[=<path>]] [--html-path] [--man-path] [--info-path]
           [-p | --paginate | -P | --no-pager] [--no-replace-objects] [--bare]
           [--git-dir=<path>] [--work-tree=<path>] [--namespace=<name>]
           <command> [<args>]

hp@DESKTOP-ABEQO77 MINGW64 ~/Desktop/Training/Git/FirstGitDemo (master)
$ git -rm tag v1.0
unknown option: -rm
usage: git [--version] [--help] [-C <path>] [-c <name>=<value>]
           [--exec-path[=<path>]] [--html-path] [--man-path] [--info-path]
           [-p | --paginate | -P | --no-pager] [--no-replace-objects] [--bare]
           [--git-dir=<path>] [--work-tree=<path>] [--namespace=<name>]
           <command> [<args>]

hp@DESKTOP-ABEQO77 MINGW64 ~/Desktop/Training/Git/FirstGitDemo (master)
$ git -rm  v1.0
unknown option: -rm
usage: git [--version] [--help] [-C <path>] [-c <name>=<value>]
           [--exec-path[=<path>]] [--html-path] [--man-path] [--info-path]
           [-p | --paginate | -P | --no-pager] [--no-replace-objects] [--bare]
           [--git-dir=<path>] [--work-tree=<path>] [--namespace=<name>]
           <command> [<args>]

hp@DESKTOP-ABEQO77 MINGW64 ~/Desktop/Training/Git/FirstGitDemo (master)
$ git checkout master
Already on 'master'

hp@DESKTOP-ABEQO77 MINGW64 ~/Desktop/Training/Git/FirstGitDemo (master)
$ git log --oneline
0e8def5 (HEAD -> master, tag: v1.1, tag: v1.0) config:gitignore to skip .class
1346b49 WI1:file2 created,Welcome Git Demo
24d632a W1:file1 updatded for changes to login
464a541 WI1:file1 created,hello world

hp@DESKTOP-ABEQO77 MINGW64 ~/Desktop/Training/Git/FirstGitDemo (master)
$ git status
On branch master
Untracked files:
  (use "git add <file>..." to include in what will be committed)
        filetobe deleted.txt

nothing added to commit but untracked files present (use "git add" to track)

hp@DESKTOP-ABEQO77 MINGW64 ~/Desktop/Training/Git/FirstGitDemo (master)
$ git add .

hp@DESKTOP-ABEQO77 MINGW64 ~/Desktop/Training/Git/FirstGitDemo (master)
$ git status
On branch master
Changes to be committed:
  (use "git restore --staged <file>..." to unstage)
        new file:   filetobe deleted.txt


hp@DESKTOP-ABEQO77 MINGW64 ~/Desktop/Training/Git/FirstGitDemo (master)
$ git commit -m "W1:filetobedeleted ,creted to test"
[master 2c9ad7a] W1:filetobedeleted ,creted to test
 1 file changed, 0 insertions(+), 0 deletions(-)
 create mode 100644 filetobe deleted.txt

hp@DESKTOP-ABEQO77 MINGW64 ~/Desktop/Training/Git/FirstGitDemo (master)
$ git status
On branch master
nothing to commit, working tree clean

hp@DESKTOP-ABEQO77 MINGW64 ~/Desktop/Training/Git/FirstGitDemo (master)
$ git log --oneline
2c9ad7a (HEAD -> master) W1:filetobedeleted ,creted to test
0e8def5 (tag: v1.1, tag: v1.0) config:gitignore to skip .class
1346b49 WI1:file2 created,Welcome Git Demo
24d632a W1:file1 updatded for changes to login
464a541 WI1:file1 created,hello world

hp@DESKTOP-ABEQO77 MINGW64 ~/Desktop/Training/Git/FirstGitDemo (master)
$ git status
On branch master
Changes not staged for commit:
  (use "git add/rm <file>..." to update what will be committed)
  (use "git restore <file>..." to discard changes in working directory)
        deleted:    filetobe deleted.txt

no changes added to commit (use "git add" and/or "git commit -a")

hp@DESKTOP-ABEQO77 MINGW64 ~/Desktop/Training/Git/FirstGitDemo (master)
$ git rm v1.0
fatal: pathspec 'v1.0' did not match any files

hp@DESKTOP-ABEQO77 MINGW64 ~/Desktop/Training/Git/FirstGitDemo (master)
$ git rm filetobedeleted
fatal: pathspec 'filetobedeleted' did not match any files

hp@DESKTOP-ABEQO77 MINGW64 ~/Desktop/Training/Git/FirstGitDemo (master)
$ git rm filetobe deleted
fatal: pathspec 'filetobe' did not match any files

hp@DESKTOP-ABEQO77 MINGW64 ~/Desktop/Training/Git/FirstGitDemo (master)
$ git rm filetobedeleted.txt
fatal: pathspec 'filetobedeleted.txt' did not match any files

hp@DESKTOP-ABEQO77 MINGW64 ~/Desktop/Training/Git/FirstGitDemo (master)
$ git status
On branch master
Changes not staged for commit:
  (use "git add/rm <file>..." to update what will be committed)
  (use "git restore <file>..." to discard changes in working directory)
        deleted:    filetobe deleted.txt

no changes added to commit (use "git add" and/or "git commit -a")

hp@DESKTOP-ABEQO77 MINGW64 ~/Desktop/Training/Git/FirstGitDemo (master)
$ git rm filetobe deleted.txt
fatal: pathspec 'filetobe' did not match any files

hp@DESKTOP-ABEQO77 MINGW64 ~/Desktop/Training/Git/FirstGitDemo (master)
$ git rm sktop/Training/Git/FirstGitDemo (master)
bash: syntax error near unexpected token `('

hp@DESKTOP-ABEQO77 MINGW64 ~/Desktop/Training/Git/FirstGitDemo (master)
$ $ git rm filetobe deleted.txt
bash: $: command not found

hp@DESKTOP-ABEQO77 MINGW64 ~/Desktop/Training/Git/FirstGitDemo (master)
$ git rm filetobe deleted.txt
fatal: pathspec 'filetobe' did not match any files

hp@DESKTOP-ABEQO77 MINGW64 ~/Desktop/Training/Git/FirstGitDemo (master)
$ git rm filetobedeleted.txt
fatal: pathspec 'filetobedeleted.txt' did not match any files

hp@DESKTOP-ABEQO77 MINGW64 ~/Desktop/Training/Git/FirstGitDemo (master)
$ git rm filetobedeleted.txt
fatal: pathspec 'filetobedeleted.txt' did not match any files

hp@DESKTOP-ABEQO77 MINGW64 ~/Desktop/Training/Git/FirstGitDemo (master)
$ git status
On branch master
Changes not staged for commit:
  (use "git add/rm <file>..." to update what will be committed)
  (use "git restore <file>..." to discard changes in working directory)
        deleted:    filetobe deleted.txt

Untracked files:
  (use "git add <file>..." to include in what will be committed)
        fileToBedeleted.txt

no changes added to commit (use "git add" and/or "git commit -a")

hp@DESKTOP-ABEQO77 MINGW64 ~/Desktop/Training/Git/FirstGitDemo (master)
$ git rm filetobe deleted.txt
fatal: pathspec 'filetobe' did not match any files

hp@DESKTOP-ABEQO77 MINGW64 ~/Desktop/Training/Git/FirstGitDemo (master)
$ git log --oneline
2c9ad7a (HEAD -> master) W1:filetobedeleted ,creted to test
0e8def5 (tag: v1.1, tag: v1.0) config:gitignore to skip .class
1346b49 WI1:file2 created,Welcome Git Demo
24d632a W1:file1 updatded for changes to login
464a541 WI1:file1 created,hello world

hp@DESKTOP-ABEQO77 MINGW64 ~/Desktop/Training/Git/FirstGitDemo (master)
$
